{"mappings":"oeAAAA,EAAA,S,WCAAC,SAASC,iBAAiB,oBAAoB,WAC1C,MAAMC,EAAkBF,SAASG,iBAAiB,WAClDD,EAAgBE,SAAQC,IACpBA,EAAGC,cAAgBC,SAASF,EAAGG,YAAYC,QAAO,OAAS,IAAK,IACjCJ,EAA5BG,YAAc,GAAG,IAExB,MAAME,EAAW,IAAIC,sBACjB,CAACC,EAASC,KACND,EAAQR,SAAQU,IACZ,GAAIA,EAAMC,eAAgB,CACtB,MAAMC,EAAUF,EAAMG,OAChBC,EAAeF,EAAQV,cAC7Ba,YAAW,IAY3B,SAAsBH,EAASC,GAC3B,MACMG,EAAYH,EAAU,MAC5B,IAAII,EAAU,EACd,SAASC,IACLD,GAAWD,EACPC,EAAUJ,GACVD,EAAQR,YAAce,KAAKC,KAAKH,GAASI,iBACzCC,sBAAsBJ,IACnBN,EAAQR,YAAcS,EAAOQ,gB,CAExCH,G,CAvB6BK,CAAaX,EAASE,IAAe,KACtDL,EAASe,UAAUZ,E,IAEzB,GAEN,CACIa,UAAW,KAGnB3B,EAAgBE,SAAQC,IACpBK,EAASoB,QAAQzB,EAAG,G,8JCtB5B,IAAA0B,EAAAhC,EAAA,SACAgC,EAAAC,KAAKC,4BAA4B7B,SAAQ,CAAC8B,EAAMC,IAC5CD,EAAKE,aAAa,UAAWD,KAEjCJ,EAAAC,KAAKK,yCAAyCjC,SAAQ,CAAC8B,EAAMC,IACzDD,EAAKE,aAAa,UAAWD,KAEjCJ,EAAAC,KAAKM,gCAAgClC,SAAQ,CAAC8B,EAAMC,IAChDD,EAAKE,aAAa,UAAWD,KAGjCJ,EAAAC,KAAKO,YAAYnC,SAAQ,CAAC8B,EAAMC,IAAUD,EAAKE,aAAa,UAAWD,KAEvEJ,EAAAC,KAAKK,yCAAyCjC,SAAQ,CAAC8B,EAAMC,IACzDD,EAAKjC,iBAAiB,SAAS,KAAMuC,OAsCjBC,EAtCgCN,EAuCpDJ,EAAAC,KAAKC,4BAA4BQ,GAAIC,UAAUC,OAC3C,gCAGAZ,EAAAC,KAAKK,yCAAyCI,GAAIjC,YAAYoC,SAC1D,UAGJb,EAAAC,KAAKK,yCAAyCI,GAAIjC,YAC9C,YAEJuB,EAAAC,KAAKK,yCAAyCI,GAAIjC,YAC9C,iBAbZ,IAAwBiC,CAtCsC,MAG9DV,EAAAC,KAAKM,gCAAgClC,SAAQ,CAAC8B,EAAMC,IAChDD,EAAKjC,iBAAiB,SAAS,IAGnC,SAA8BwC,GACDI,MAAMC,KAAKf,EAAAC,KAAKO,aACxBnC,SAAQ,CAAC8B,EAAMC,KACxBA,IAAUM,EACVP,EAAKQ,UAAUC,OAAO,gCAEtBT,EAAKQ,UAAUK,OAAO,+BAA+B,IAI7BF,MAAMC,KAAKf,EAAAC,KAAKgB,oBACxB5C,SAAQ,CAAC8B,EAAMC,KAC/BA,IAAUM,EACVP,EAAKQ,UAAUC,OAAO,gBAEtBT,EAAKQ,UAAUK,OAAO,eAAe,IAIAF,MAAMC,KAC/Cf,EAAAC,KAAKM,iCAE4BlC,SAAQ,CAAC8B,EAAMC,KAC5CA,IAAUM,EACVP,EAAKQ,UAAUC,OAAO,yBAEtBT,EAAKQ,UAAUK,OAAO,wBAAwB,G,CA7BjBE,CAAqBd,O","sources":["src/aboutCompanyPage.js","src/js/counter_services.js","src/js/showDetailsMedicalCard.js"],"sourcesContent":["import './js/refs';\nimport './js/toggleLang';\nimport './js/counter_services';\nimport './js/descr_job_vacancy';\nimport './js/openFormVacancy';\nimport './js/slider_licenses';\nimport './js/slider_reviews';\nimport './js/expand_answer_question';\nimport './js/openMobileMenu';\nimport './js/openSocialListClinic';\nimport './js/openLocationBlockClinic';\nimport './js/openModalContacts';\nimport './js/scrollUp';\nimport './js/openModaWindowMap';\nimport './js/openModaWindowLicenes';\nimport './js/openModaWindowVideo';\nimport './js/openModaWindowForm';\nimport './js/showDetailsMedicalCard';\nimport './js/openModalWindowPostForm';\nimport './js/anime';\nimport './js/scrollToSectionContacts';\n","document.addEventListener('DOMContentLoaded', function () {\n    const counterElements = document.querySelectorAll('.number');\n    counterElements.forEach(el => {\n        el.originalValue = parseInt(el.textContent.replace(/\\s+/g, ''), 10); // Сохранение оригинального значения\n        el.textContent = '0'; // Установка начального значения в ноль\n    });\n    const observer = new IntersectionObserver(\n        (entries, observer) => {\n            entries.forEach(entry => {\n                if (entry.isIntersecting) {\n                    const element = entry.target;\n                    const targetNumber = element.originalValue;\n                    setTimeout(() => startCounter(element, targetNumber), 500);\n                    observer.unobserve(element);\n                }\n            });\n        },\n        {\n            threshold: 0.1,\n        }\n    );\n    counterElements.forEach(el => {\n        observer.observe(el);\n    });\n    function startCounter(element, target) {\n        const duration = 1500; // Длительность анимации в миллисекундах\n        const increment = target / (duration / 16); // Обновление каждые 16 мс (приблизительно 60 fps)\n        let current = 0;\n        function updateCounter() {\n            current += increment;\n            if (current < target) {\n                element.textContent = Math.ceil(current).toLocaleString();\n                requestAnimationFrame(updateCounter);\n            } else element.textContent = target.toLocaleString();\n        }\n        updateCounter();\n    }\n});\n","import { refs } from './refs';\nrefs.textDescrDetailsMedicalCard.forEach((elem, index) =>\n    elem.setAttribute('data-id', index)\n);\nrefs.toggleBtnShowTextDescrDetailsMedicalCard.forEach((elem, index) =>\n    elem.setAttribute('data-id', index)\n);\nrefs.toggleBtnShowDetailsMedicalCard.forEach((elem, index) =>\n    elem.setAttribute('data-id', index)\n);\n\nrefs.medicalCard.forEach((elem, index) => elem.setAttribute('data-id', index));\n\nrefs.toggleBtnShowTextDescrDetailsMedicalCard.forEach((elem, index) =>\n    elem.addEventListener('click', () => toggleShowText(index))\n);\n\nrefs.toggleBtnShowDetailsMedicalCard.forEach((elem, index) =>\n    elem.addEventListener('click', () => toggleClassOnElement(index))\n);\n\nfunction toggleClassOnElement(id) {\n    const medicalCardArray = Array.from(refs.medicalCard);\n    medicalCardArray.forEach((elem, index) => {\n        if (index === id) {\n            elem.classList.toggle('visible_details_medical_card');\n        } else {\n            elem.classList.remove('visible_details_medical_card');\n        }\n    });\n\n    const detailsMedicalCardArray = Array.from(refs.detailsMedicalCard);\n    detailsMedicalCardArray.forEach((elem, index) => {\n        if (index === id) {\n            elem.classList.toggle('show_details');\n        } else {\n            elem.classList.remove('show_details');\n        }\n    });\n\n    const toggleBtnShowDetailsMedicalCardArray = Array.from(\n        refs.toggleBtnShowDetailsMedicalCard\n    );\n    toggleBtnShowDetailsMedicalCardArray.forEach((elem, index) => {\n        if (index === id) {\n            elem.classList.toggle('rotate_btn_show_descr');\n        } else {\n            elem.classList.remove('rotate_btn_show_descr');\n        }\n    });\n}\n\nfunction toggleShowText(id) {\n    refs.textDescrDetailsMedicalCard[id].classList.toggle(\n        'show_text_descr_details'\n    );\n    if (\n        refs.toggleBtnShowTextDescrDetailsMedicalCard[id].textContent.includes(\n            'Читати'\n        )\n    ) {\n        refs.toggleBtnShowTextDescrDetailsMedicalCard[id].textContent =\n            'Приховати';\n    } else {\n        refs.toggleBtnShowTextDescrDetailsMedicalCard[id].textContent =\n            'Читати більше';\n    }\n}\n"],"names":["parcelRequire","document","addEventListener","counterElements","querySelectorAll","forEach","el","originalValue","parseInt","textContent","replace","observer1","IntersectionObserver","entries","observer","entry","isIntersecting","element","target","targetNumber","setTimeout","increment","current","updateCounter","Math","ceil","toLocaleString","requestAnimationFrame","startCounter","unobserve","threshold","observe","$krGWQ","refs","textDescrDetailsMedicalCard","elem","index","setAttribute","toggleBtnShowTextDescrDetailsMedicalCard","toggleBtnShowDetailsMedicalCard","medicalCard","$94114b6c9ac2dc78$var$toggleShowText","id","classList","toggle","includes","Array","from","remove","detailsMedicalCard","$94114b6c9ac2dc78$var$toggleClassOnElement"],"version":3,"file":"about.a58a7094.js.map"}