!function(){"use strict";const t=new IntersectionObserver(((t,e)=>{t.forEach((t=>{t.isIntersecting?(t.target.classList.add("start-animation-text"),e.unobserve(t.target)):t.target.classList.remove("start-animation-text")}))}));document.querySelectorAll(".hidden-text").forEach((e=>t.observe(e)));const e=new IntersectionObserver(((t,e)=>{t.forEach((t=>{t.isIntersecting?(t.target.classList.add("start-animation-blockLeft"),e.unobserve(t.target)):t.target.classList.remove("start-animation-blockLeft")}))}));document.querySelectorAll(".hidden-blockLeft").forEach((t=>e.observe(t)));const r=new IntersectionObserver(((t,e)=>{t.forEach((t=>{t.isIntersecting?(t.target.classList.add("start-animation-blockRight"),e.unobserve(t.target)):t.target.classList.remove("start-animation-blockRight")}))}));document.querySelectorAll(".hidden-blockRight").forEach((t=>r.observe(t)));const s=document.querySelectorAll(".statistics__number"),n=new IntersectionObserver(((t,e)=>{t.forEach((t=>{if(t.isIntersecting){const r=t.target,s=parseInt(r.getAttribute("data-target"),10),n=parseInt(r.textContent,10),a=s>1e3?10:1;anime({targets:r,innerHTML:[n,s],easing:"easeOutExpo",duration:2e3,round:1,update:function(t){const e=Math.floor(t.animations[0].currentValue),n=Math.floor(e/a)*a;r.innerHTML=98===s?`${n}%`:s>10?`${n}<span aria-hidden="true" class="statistics__plus">+</span>`:n}}),e.unobserve(r)}}))}),{threshold:.5});s.forEach((t=>n.observe(t)))}();