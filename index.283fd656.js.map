{"mappings":"gfAAAA,EAAA,SCAA,ICAAC,EDEmB,IAAI,EAFvBD,EAAA,SAEuBE,SAAO,eAAgB,CAC1CC,OAAQ,OACRC,YAAY,EACZC,MAAM,EACNC,UAAW,WACXC,MAAO,KACPC,WAAY,CACRC,QAAQ,EACRC,cAAc,EACdC,aAAc,GACdC,YAAa,GAEjBC,SAAU,CACNC,MAAO,IACPC,mBAAmB,GAEvBC,WAAY,CACRC,GAAI,qBACJC,KAAM,UACNC,WAAW,EACXC,mBAAoB,EACpBC,aAAc,UACdC,WAAY,4BAGhBC,GAAI,CACAC,KAAM,WAAY,EAClBC,YAAa,WACT,IACMC,EAAeC,SAASC,cAC1B,4BAEEC,GAJSC,KAIaC,UAAY,GACnCC,WACAC,SAAS,EAAG,KACbP,IACAA,EAAaQ,YAAcL,E,KChC3C,SAASM,IACLlC,EAAAmC,KAAKC,aAAaC,eAAe,CAAEC,SAAU,U,CCPjDZ,SAASa,iBAAiB,oBAAoB,WAC1C,IAAMC,EAAkBd,SAASe,iBAAiB,WAClDD,EAAgBE,SAAQ,SAAA1B,GACpBA,EAAG2B,cAAgBC,SAAS5B,EAAGiB,YAAYY,QAAO,OAAS,IAAK,IACjC7B,EAA5BiB,YAAc,G,IAErB,IAAMa,EAAW,IAAIC,sBACjB,SAACC,EAASC,GACND,EAAQN,SAAQ,SAAAQ,GACZ,GAAIA,EAAMC,eAAgB,CACtB,IAAMC,EAAUF,EAAMG,OAChBC,EAAeF,EAAQT,cAC7BY,YAAW,W,OAY3B,SAAsBH,EAASC,GAC3B,IACMG,EAAYH,EAAU,MACxBI,EAAU,EACd,SAASC,KACLD,GAAWD,GACGH,GACVD,EAAQnB,YAAc0B,KAAKC,KAAKH,GAASI,iBACzCC,sBAAsBJ,IACnBN,EAAQnB,YAAcoB,EAAOQ,gB,CAExCH,G,CAvB6BK,CAAaX,EAASE,E,GAAe,KACtDL,EAASe,UAAUZ,E,OAI/B,CACIa,UAAW,KAGnBzB,EAAgBE,SAAQ,SAAA1B,GACpB8B,EAASoB,QAAQlD,E,QCtBzBhB,EAAAD,EAAA,UAEAoC,KAAKgC,oBAAoB5B,iBAAiB,SAE1C,WACIvC,EAAAmC,KAAKiC,aAAaC,UAAUC,OAAO,aACnCtE,EAAAmC,KAAKoC,SAASF,UAAUC,OAAO,aAC/BtE,EAAAmC,KAAKqC,UAAUH,UAAUC,OAAO,Y,gMFPpCtE,EAAAD,EAAA,UAEAoC,KAAKsC,0BAA0B/B,SAAQ,SAAAgC,G,OACnCA,EAAKnC,iBAAiB,QAASL,E","sources":["src/index.js","src/js/slider.js","src/js/scrollToSectionAbout.js","src/js/counter_services.js","src/js/openBlockInfoCEO.js"],"sourcesContent":["import './js/refs';\nimport './js/slider';\nimport './js/counter_services';\nimport './js/openBlockInfoCEO';\nimport './js/toggleLang';\nimport './js/descr_job_vacancy';\nimport './js/openFormVacancy';\nimport './js/slider_licenses';\nimport './js/slider_reviews';\nimport './js/expand_answer_question';\nimport './js/openMobileMenu';\nimport './js/openSocialListClinic';\nimport './js/openLocationBlockClinic';\nimport './js/openModalContacts';\nimport './js/scrollUp';\nimport './js/openModaWindowMap';\nimport './js/openModaWindowLicenes';\nimport './js/openModaWindowVideo';\nimport './js/openModaWindowForm';\nimport './js/openModalWindowPostForm';\nimport './js/anime';\nimport './js/scrollToSectionAbout';\nimport './js/scrollToSectionContacts';\n","import Swiper from 'swiper/swiper-bundle.min.mjs';\n\nconst cubeSlider = new Swiper('.cube-slider', {\n    effect: 'cube',\n    grabCursor: true,\n    loop: true,\n    direction: 'vertical',\n    speed: 3600,\n    cubeEffect: {\n        shadow: true,\n        slideShadows: false,\n        shadowOffset: 40,\n        shadowScale: 1,\n    },\n    autoplay: {\n        delay: 5000,\n        pauseOnMouseEnter: true,\n    },\n    pagination: {\n        el: '.swiper-pagination',\n        type: 'bullets',\n        clickable: true,\n        dynamicMainBullets: 4,\n        currentClass: '.active',\n        totalClass: '.swiper-pagination-total',\n    },\n\n    on: {\n        init: function () {},\n        slideChange: function () {\n            const swiper = this;\n            const currentSlide = document.querySelector(\n                '.swiper-pagination-total'\n            );\n            const slideNumber = (swiper.realIndex + 1)\n                .toString()\n                .padStart(2, '0');\n            if (currentSlide) {\n                currentSlide.textContent = slideNumber;\n            }\n        },\n    },\n});\n","import { refs } from './refs';\n\nrefs.itemsScrolltoSectionAbout.forEach(elem =>\n    elem.addEventListener('click', onToSectionAboutBtn)\n);\n\nfunction onToSectionAboutBtn() {\n    refs.sectionAbout.scrollIntoView({ behavior: 'smooth' });\n}\n","document.addEventListener('DOMContentLoaded', function () {\n    const counterElements = document.querySelectorAll('.number');\n    counterElements.forEach(el => {\n        el.originalValue = parseInt(el.textContent.replace(/\\s+/g, ''), 10); // Сохранение оригинального значения\n        el.textContent = '0'; // Установка начального значения в ноль\n    });\n    const observer = new IntersectionObserver(\n        (entries, observer) => {\n            entries.forEach(entry => {\n                if (entry.isIntersecting) {\n                    const element = entry.target;\n                    const targetNumber = element.originalValue;\n                    setTimeout(() => startCounter(element, targetNumber), 500);\n                    observer.unobserve(element);\n                }\n            });\n        },\n        {\n            threshold: 0.1,\n        }\n    );\n    counterElements.forEach(el => {\n        observer.observe(el);\n    });\n    function startCounter(element, target) {\n        const duration = 1500; // Длительность анимации в миллисекундах\n        const increment = target / (duration / 16); // Обновление каждые 16 мс (приблизительно 60 fps)\n        let current = 0;\n        function updateCounter() {\n            current += increment;\n            if (current < target) {\n                element.textContent = Math.ceil(current).toLocaleString();\n                requestAnimationFrame(updateCounter);\n            } else element.textContent = target.toLocaleString();\n        }\n        updateCounter();\n    }\n});\n","import { refs } from './refs';\n\nrefs.openBlockInfoCeoBtn.addEventListener('click', toggle);\n\nfunction toggle() {\n    refs.blockInfoCEO.classList.toggle('is-hidden');\n    refs.iconPlus.classList.toggle('is-hidden');\n    refs.iconMinus.classList.toggle('is-hidden');\n}\n"],"names":["parcelRequire","$4Nugj","default","effect","grabCursor","loop","direction","speed","cubeEffect","shadow","slideShadows","shadowOffset","shadowScale","autoplay","delay","pauseOnMouseEnter","pagination","el","type","clickable","dynamicMainBullets","currentClass","totalClass","on","init","slideChange","currentSlide","document","querySelector","slideNumber","this","realIndex","toString","padStart","textContent","$63fd0dad255ac973$var$onToSectionAboutBtn","refs","sectionAbout","scrollIntoView","behavior","addEventListener","counterElements","querySelectorAll","forEach","originalValue","parseInt","replace","observer1","IntersectionObserver","entries","observer","entry","isIntersecting","element","target","targetNumber","setTimeout","increment","current","updateCounter","Math","ceil","toLocaleString","requestAnimationFrame","startCounter","unobserve","threshold","observe","openBlockInfoCeoBtn","blockInfoCEO","classList","toggle","iconPlus","iconMinus","itemsScrolltoSectionAbout","elem"],"version":3,"file":"index.283fd656.js.map"}